@using Microsoft.AspNetCore.Identity

@inject SignInManager<MyUser> SignInManager
@inject UserManager<MyUser> UserManager
@inject RoleManager<IdentityRole> roleManager;

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            @{
                var audkenni = UserManager.GetUserId(User);
                var userinn = await UserManager.FindByIdAsync(audkenni);
                if (await UserManager.IsInRoleAsync(userinn, "Admin"))
                {
                    <li class="nav-item">
                        <a class="nav-link" asp-area="Identity" asp-page="/Account/Admin/Index" title="Manage">Admin @UserManager.GetUserName(User)</a>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)</a>
                    </li>
                }
            }
            <li class="nav-item">
                <button type="submit" class="btn btn-outline-success my-2 my-sm-0">Logout</button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li class="nav-item"><a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a></li>
        <li class="nav-item"><a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a></li>
    </ul>
}